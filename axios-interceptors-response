import axios from 'axios' 

// axios.interceptors.response.use( async (response) => {

//   const data = response.data
//   if(data.status === "Token is Expired")
//   {
//     console.log('หมดอายุ');
    
//     const res =  await axios.post("http://127.0.0.1:8000/api/refresh",null,{headers: { Authorization: "Bearer " + localStorage.token }})
//     localStorage.token = res.data.access_token
//     response.config.headers.Authorization = "Bearer " + localStorage.token
//     const resnew = await axios(response.config)
//     return resnew
//   }else{
//     return response
//   }
  

 
// }, error => {

//   return Promise.reject(error);

// });
let isRefreshing = false;
 let failedQueue = [];

       const processQueue = (error, token = null) => {
            failedQueue.forEach(prom => {
                if (error) {
                    prom.reject(error);
                } else {
                    prom.resolve(token);
                }
            });

            failedQueue = [];
        };

axios.interceptors.response.use(
            response => {
              const data = response.data
              const originalRequest = response.config;

                if (data.status === "Token is Expired" && !originalRequest._retry) {
                  console.log("หมดอายุ")
                    if (isRefreshing) {
                        return new Promise(function(resolve, reject) {
                            failedQueue.push({ resolve, reject });
                        })
                            .then(token => {
                                originalRequest.headers['Authorization'] = 'Bearer ' + token;
                                return axios(originalRequest);
                            })
                            .catch(err => {
                                return Promise.reject(err);
                            });
                    }
                    console.log("หมดอายุ out if")
                    originalRequest._retry = true;
                    isRefreshing = true;

                    return new Promise(function(resolve, reject) {
                        axios
                            // .post('/fooUrl/refreshToken', {refreshToken: "fooToken"})
                            .post("http://127.0.0.1:8000/api/refresh",null,{headers: { Authorization: "Bearer " + localStorage.token }})
                            .then(({ data }) => {
                              console.log(data);
                                localStorage.token = data.access_token // change token in local
                                axios.defaults.headers.common['Authorization'] = 'Bearer ' + data.access_token;
                                originalRequest.headers['Authorization'] = 'Bearer ' + data.access_token;
                                processQueue(null, data.access_token);
                                resolve(axios(originalRequest));
                            })
                            .catch(err => {
                                processQueue(err, null);
                                reject(err);
                            })
                            .then(() => {
                                isRefreshing = false;
                            });
                    });
                }
                return response;
            },
err => {
                
                return Promise.reject(err);
            }
        );
export const axiosres =  axios
